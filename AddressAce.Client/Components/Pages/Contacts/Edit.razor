@page "/contacts/edit/{contactId:int}"
@using AddressAce.Client.Components.UI.Contacts
@using AddressAce.Client.Models

@attribute [Authorize]
@inject IContactDTOService ContactService
@inject NavigationManager Nav

@rendermode InteractiveServer

<PageTitle>AddressAce | @(string.IsNullOrEmpty(contact?.FullName) ? "Edit Contact" : contact.FullName)</PageTitle>

<div class="d-flex align-items-center mt-3">
    <ContactForm Contact="contact" OnSubmit="HandleSubmit" />
</div>



@code {

    private UserInfo? userInfo;

    private ContactDTO? contact { get; set; }

    [Parameter] 
    public int contactId { get; set; }

    [CascadingParameter]
    private Task<AuthenticationState>? AuthStateTask { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            userInfo = await UserInfoHelper.GetUserInfoAsync(AuthStateTask);
            contact = await ContactService.GetContactByIdAsync(contactId, userInfo!.UserId);
        }
        catch(Exception ex)
        {
            Console.WriteLine(ex);
        }

        if (contact is null)
        {
            Nav.NavigateTo("/contacts");
        }
    }

    private async Task HandleSubmit(ContactDTO contact)
    {
        await ContactService.UpdateContactAsync(contact, userInfo!.UserId);
        Nav.NavigateTo("/contacts");
    }
}